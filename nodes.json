{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "MinSize": {
      "Type": "String",
      "Description": "The minimum number of instances",
      "Default": 3
    },
    "MaxSize": {
      "Type": "String",
      "Description": "The maximum number of instances",
      "Default": 20
    },
    "InstanceType": {
      "Type": "String",
      "Description": "The size of the instances",
      "Default": "t2.small"
    },
    "ImageId": {
      "Type": "String",
      "Default": "ami-f349e780"
    },
    "RootSize": {
      "Default": "8",
      "Description": "Root EBS size",
      "Type": "Number"
    },
    "RootType": {
      "Default": "gp2",
      "Description": "Root EBS type",
      "Type": "String"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "CPUAlarmHighEvalPeriods": {
      "Type": "String",
      "Default": "1"
    },
    "CPUAlarmHighThreshold": {
      "Type": "String",
      "Default": "80"
    },
    "CPUAlarmLowThreshold": {
      "Type": "String",
      "Default": "60"
    },
    "CPUAlarmLowEvalPeriods": {
      "Type": "String",
      "Default": "5"
    },
    "AlarmPeriod": {
      "Type": "String",
      "Default": "60"
    },
    "RancherServerURL": {
      "Type": "String"
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-"
    },
    "PublicSubnets": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Default": "subnet-"
    },
    "ELBConnectionDraining": {
      "Type": "String",
      "Description": "Connection draining ensures that the load balancer completes serving all in-flight requests made to a registered instance when the instance is deregistered or becomes unhealthy",
      "Default": 30
    },
    "ELBSslARN": {
      "Description": "SSL certificate full ARN",
      "Type": "String"
    }
  },
  "Resources": {
    "ComponentAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": 1,
          "MaxBatchSize": 1,
          "PauseTime": "PT0S"
        }
      },
      "Properties": {
        "VPCZoneIdentifier" : { "Ref" : "PublicSubnets" },
        "Tags": [
          {
            "Value": "rancher",
            "PropagateAtLaunch": true,
            "Key": "Project"
          },
          {
            "Value": "rancher-node",
            "PropagateAtLaunch": true,
            "Key": "Name"
          },
          {
            "Value": "rancher-node",
            "PropagateAtLaunch": true,
            "Key": "Component"
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "ComponentElasticLoadBalancer"
          }
        ],
        "MinSize": {
          "Ref": "MinSize"
        },
        "MaxSize": {
          "Ref": "MaxSize"
        },
        "LaunchConfigurationName": {
          "Ref": "ComponentLaunchConfiguration"
        },
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        }
      }
    },
    "ComponentLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeSize": { "Ref": "RootSize" },
              "VolumeType": { "Ref": "RootType" }
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "ComponentSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config\n",
                "rancher:\n",
                "  services:\n",
                "    register:\n",
                "      priviledged: true\n",
                "      volumes:\n",
                "      - /var/run/docker.sock:/var/run/docker.sock\n",
                "      image: rancher/agent\n",
                "      command:\n",
                {
                  "Fn::Join": [
                    "",
                    [
                      "      - ",
                      {
                        "Ref": "RancherServerURL"
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "ComponentScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": 240,
        "ScalingAdjustment": 1
      }
    },
    "ComponentScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity",
        "Cooldown": 60,
        "ScalingAdjustment": -1
      }
    },
    "ComponentElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone": true,
        "Subnets": {
          "Ref": "PublicSubnets"
        },
        "Listeners": [
          {
            "InstancePort": 80,
            "LoadBalancerPort": 80,
            "Protocol": "http",
            "InstanceProtocol": "http"
          },
          {
            "InstancePort": 80,
            "LoadBalancerPort": 443,
            "Protocol": "https",
            "InstanceProtocol": "http",
            "SSLCertificateId": { "Ref": "ELBSslARN" }
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSecurityGroup"
          }
        ],
        "Policies": [
          {
            "PolicyName": "EnableProxyProtocol",
            "InstancePorts": [
              "80",
              "443"
            ],
            "PolicyType": "ProxyProtocolPolicyType",
            "Attributes": [
              {
                "Name": "ProxyProtocol",
                "Value": "true"
              }
            ]
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": 3,
          "Interval": 15,
          "Target": "TCP:80",
          "Timeout": 10,
          "UnhealthyThreshold": 8
        },
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": {
            "Ref": "ELBConnectionDraining"
          }
        }
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": 80,
            "IpProtocol": "tcp",
            "FromPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "ToPort": 443,
            "IpProtocol": "tcp",
            "FromPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "An ELB group allowing access only to from the corresponding component"
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 80% for 1 minutes",
        "Threshold": {
          "Ref": "CPUAlarmHighThreshold"
        },
        "AlarmActions": [
          {
            "Ref": "ComponentScaleUpPolicy"
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": {
          "Ref": "CPUAlarmHighEvalPeriods"
        },
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": {
          "Ref": "AlarmPeriod"
        },
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ComponentAutoScalingGroup"
            }
          }
        ]
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-down if CPU < 60% for 5 minutes",
        "Threshold": {
          "Ref": "CPUAlarmLowThreshold"
        },
        "AlarmActions": [
          {
            "Ref": "ComponentScaleDownPolicy"
          }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": {
          "Ref": "CPUAlarmLowEvalPeriods"
        },
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": {
          "Ref": "AlarmPeriod"
        },
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ComponentAutoScalingGroup"
            }
          }
        ]
      }
    },
    "ComponentSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "FromPort": 0,
            "ToPort": 0,
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "FromPort": 80,
            "ToPort": 80,
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            }
          },
          {
            "FromPort": 443,
            "ToPort": 443,
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            }
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "A component security group allowing access to the outside world"
      }
    }
  },
  "Outputs": {
    "ELBURL": {
      "Value": {
       "Fn::Join": [
         "",
         [
           "http://",
           {
             "Fn::GetAtt": [
               "ComponentElasticLoadBalancer",
               "DNSName"
             ]
           }
         ]
       ]
     },
      "Description": "The ELB to point to for scaling services"
    }
  }
}
